# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     argocd.argoproj.io/instance: mocha-front-dev
#   name: new-mocha-frontend-dev-deployment
#   namespace: mocha-dev
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mocha-frontend-dev
#       version: v582
#   template:
#     metadata:
#       labels:
#         app: mocha-frontend-dev
#         version: v582
#     spec:
#       containers:
#         - image: 'tferrari92/mocha-frontend:582'
#           name: mocha-frontend-dev
#           ports:
#             - containerPort: 80
#           volumeMounts:
#             - mountPath: /usr/share/nginx/html/resources
#               name: images-configmap
#             - mountPath: /etc/nginx/conf.d
#               name: nginx-conf-configmap
#       volumes:
#         - configMap:
#             name: mocha-frontend-dev-images-configmap
#           name: images-configmap
#         - configMap:
#             name: mocha-frontend-dev-nginx-conf-configmap
#           name: nginx-conf-configmap
# ---
# # This defines waht backend applications are used. We call them subsets
# apiVersion: networking.istio.io/v1beta1
# kind: DestinationRule
# metadata:
#   name: mocha-frontend-dev-dest-rule
#   namespace: mocha-dev
# spec:
#   host:  mocha-frontend-dev-service # Host is the name of the service associated with the deployments
#   subsets:
#     - name: v596 # Subset for v580
#       labels: # The labels on the deployment
#         app: mocha-frontend-dev
#         version: v596
#     - name: v582 # Subset for v581
#       labels: # The labels on the deployment
#         app: mocha-frontend-dev
#         version: v582
# ---
# # This takes care of the canary deployment
# apiVersion: networking.istio.io/v1beta1
# kind: VirtualService
# metadata:
#   name: mocha-frontend-dev-virt-svc
#   namespace: mocha-dev
# spec:
#   hosts:
#     - mocha-frontend-dev-service # Host is the name of the service associated with the deployments NO!!!! NO SE Q ES ESTO
#     - mocha-dev.tferrari.com # Istio Gateway service external IP
#   gateways:
#     - istio-gateway
#   http:
#     - match:
#         - uri:
#             prefix: /
#       route:
#         - destination:
#             host: mocha-frontend-dev-service # Host is the name of the service associated with the deployments
#             subset: v596
#           weight: 100
#         - destination:
#             host: mocha-frontend-dev-service # Host is the name of the service associated with the deployments
#             subset: v582
#           weight: 0
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: mocha-front-gateway
  namespace: mocha-dev
spec:
  selector:
    istio: gateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - mocha-dev.tferrari.com # Istio Gateway service external IP
    # - port:
    #     number: 443
    #     name: https
    #     protocol: HTTPS
    #   hosts:
    #     - mocha-dev.tferrari.com
    #   tls:
    #     credentialName: mocha-dev-tferrari-com-crt
    #     mode: SIMPLE
---
# apiVersion: networking.istio.io/v1beta1
# kind: VirtualService
# metadata:
#   name: mocha-frontend-dev-virt-svc
#   namespace: mocha-dev
# spec:
#   hosts:
#   - mocha-dev.tferrari.com
#   # - "*"
#   gateways:
#   - mocha-front-gateway
#   http:
#   - route:
#     - destination:
#         host: mocha-frontend-dev-service
#     # match:
#     # - uri:
#     #     prefix: /

---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: istio-pods
  namespace: observability
  labels:
    release: kube-prometheus-stack # Required to be scraped by Prometheus server
spec:
  namespaceSelector:
    matchNames:
      - mocha-dev
  selector:
    matchLabels:
      istio: monitor
  podMetricsEndpoints:
    - port: http-envoy-prom
      path: stats/prometheus

# We creare a service to be watched by the service monitor
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-prom
  namespace: service-mesh
  labels:
    app: gateway
spec:
  ports:
    - name: metrics
      port: 15090
  selector: # Labels of the gateway pod
    app: istio-gateway 
    istio: gateway
 
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: istio-service
  namespace: observability
  labels:
    release: kube-prometheus-stack # Required to be scraped by Prometheus server
spec:
  namespaceSelector:
    matchNames:
      - service-mesh
  selector:
    matchLabels:
      app: gateway # Label of the service
  endpoints:
    - port: metrics
      path: stats/prometheus
